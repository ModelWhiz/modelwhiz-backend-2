# ModelWhiz Backend Environment Configuration
# =============================================
# Copy this file to .env and customize for your environment

# Application Settings
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Database Configuration
# For development (SQLite):
DATABASE_URL=sqlite:///./test.db
# For production (PostgreSQL):
# DATABASE_URL=postgresql://modelwhiz_user:modelwhiz_password@localhost:5432/modelwhiz_db
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_TIMEOUT=30
DB_ECHO=false

# Redis Configuration
# For development (local without password):
REDIS_URL=redis://localhost:6379
REDIS_BROKER_URL=redis://localhost:6379/0
REDIS_RESULT_BACKEND=redis://localhost:6379/1
# For production (with password):
# REDIS_URL=redis://:modelwhiz_redis_password@localhost:6379
# REDIS_BROKER_URL=redis://:modelwhiz_redis_password@localhost:6379/0
# REDIS_RESULT_BACKEND=redis://:modelwhiz_redis_password@localhost:6379/1
REDIS_MAX_CONNECTIONS=20
REDIS_HEALTH_CHECK_INTERVAL=30
REDIS_COMPRESSION_THRESHOLD=1024

# Celery Configuration
CELERY_WORKER_CONCURRENCY=4
CELERY_TASK_ALWAYS_EAGER=false
CELERY_TASK_EAGER_PROPAGATES=true
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_TASK_ACKS_LATE=true
CELERY_WORKER_DISABLE_RATE_LIMITS=false

# File Upload Settings
UPLOAD_DIR=uploads
MAX_FILE_SIZE=100MB
ALLOWED_EXTENSIONS=.pkl,.joblib,.zip,.csv

# Performance Settings
COMPRESSION_LEVEL=6
MINIMUM_COMPRESSION_SIZE=100

# Security Settings
SECRET_KEY=your-super-secret-key-change-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Monitoring Settings
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_ERROR_MONITORING=true
ENABLE_CACHE_MONITORING=true

# =============================================
# QUICK START FOR DEVELOPMENT:
# 1. Copy this file to .env: cp env.example .env
# 2. Run the startup script: .\start_development.ps1
# 
# The startup script will automatically:
# - Create a proper .env file if missing
# - Start Redis server
# - Initialize database and run migrations
# - Create upload directories
# - Start Celery worker and beat
# - Start FastAPI server
# =============================================
